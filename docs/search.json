[{"path":"https://psrc.github.io/psrcctpp/articles/psrcctpp_basics.html","id":"why-ctpp-data","dir":"Articles","previous_headings":"","what":"Why CTPP data?","title":"psrcctpp basics","text":"Although derived American Community Survey (ACS), CTPP includes data items published ACS release, scales substantially smaller ACS Public Use Microdata (PUMS). ACS products, consistent across scales, supports longitudinal analysis, includes margins error. authoritative nationwide, Census Bureau source transportation flow data particular. primary drawback CTPP data approximately 3-year lag develop ; since ’s restricted non-overlapping 5-year spans, may involve remove nearly seven years conclusion first year reported span. Issues transportation impacts accompanying 2020 Covid pandemic long signature data (.e. next data without arrive around 2029).","code":""},{"path":[]},{"path":"https://psrc.github.io/psrcctpp/articles/psrcctpp_basics.html","id":"determine-which-table-to-request","dir":"Articles","previous_headings":"Identify and retrieve CTPP data","what":"Determine which table to request","title":"psrcctpp basics","text":"order request data, ACS, one must know CTPP table code (variable codes). assist identifying , package search function, ctpp_tblsearch(). two required parameters: prefix - CTPP uses pattern table names: first character “” denotes originally reported data (confidential values suppressed); “B” indicates data noise infusion instead suppression (“perturbed”), “C” data noise infusion fewer categories (“condensed” enable greater statistical reliability). Release 2017-21 dataset saw full retirement “” tables introduction “C” tables. second character indicates either residence geography (“1”), workplace geography (“2”), flows (“3”, .e. residence workplace geography). example, condensed table reported workplace geography uses prefix “C2”. ctpp_tblsearch() function can also take question mark wildcard place either character, .e. “?3” show relevant flow tables, regardless whether original perturbed data. “regex” - regular expression search term find table description. case-sensitive. (optional) year - .e. specify survey; otherwise defaults latest (currently 2012-16) example, ’re looking workplace-geography table showing mode, aka “means transportation” Census parlance. example, first table (A202105) one ’re . Notice, even attribute interest listed secondarily, typically subtotals dimension alone within table.","code":"shhh <- suppressPackageStartupMessages shhh(library(psrcctpp)) shhh(library(magrittr)) shhh(library(dplyr)) shhh(library(stringr))  ctpp_tblsearch(\"?2\", \"means of transp\", year=2021) %>%   mutate(desc=str_replace(description, \"by Means .*\", \"bmtw\")) %>%   select(c(name, desc)) %>% head() ##       name                                        desc ##     <char>                                      <char> ## 1: B202105        Means of Transportation to Work (18) ## 2: B202200 Race and Hispanic or Latino Origin (3) bmtw ## 3: B202202                      Age of Worker (8) bmtw ## 4: B202213               Travel Time to Work (15) bmtw ## 5: B202216             Time Arriving At Work (17) bmtw ## 6: B202222                   Class of Worker (10) bmtw"},{"path":"https://psrc.github.io/psrcctpp/articles/psrcctpp_basics.html","id":"get-the-data","dir":"Articles","previous_headings":"Identify and retrieve CTPP data","what":"Get the data","title":"psrcctpp basics","text":"’ve identified table code, can now use get_psrc_ctpp() function retrieve data. parameters : scale - residence workplace tables, either “county”, “place”, “tract” flow tables, either “county-county”, “place-place”, “place-county”, “county-place”, “tract-tract” “block group” scale available starting 2017-21 survey. table_code - identifier (string) table want (can also request individual variables) dyear - aka data year, last year CTPP span (.e. 2016 2012-16) default, resulting dataframe restricted geographies within Central Puget Sound region (flows one end within region). specify narrower set–geographies outside region–can provide character vector using optional geoids argument containing desired FIPS codes. Notice results include res_geoid, res_label work_geoid, work_label fields, work fields NA residential tables residence fields NA workplace tables. Categorical fields left character rather factor datatype. Suppressed values original data (“”) tables also coded NA.","code":"x <- get_psrc_ctpp(\"tract\", \"B202105\", 2021)            # get data  mutate(x, tract=str_extract(work_label, \"[\\\\.\\\\d]+\")) %>%  # fit in frame   select(10, 7:8) %>% filter(tract==\"82\") %>% head() ##     tract                                    category estimate ##    <char>                                      <char>    <num> ## 1:     82                                    Bicycle       350 ## 2:     82                                         Bus     7720 ## 3:     82           Car, truck, or van -- Drove alone     8120 ## 4:     82 Car, truck, or van -- In a 2-person carpool     1165 ## 5:     82 Car, truck, or van -- In a 3-person carpool      120 ## 6:     82 Car, truck, or van -- In a 4-person carpool       60"},{"path":"https://psrc.github.io/psrcctpp/articles/psrcctpp_basics.html","id":"aggregate-ctpp-data-using-custom-variables","dir":"Articles","previous_headings":"","what":"Aggregate CTPP data using custom variables","title":"psrcctpp basics","text":"CTPP data tables include totals well category breakdowns, wish define either custom category custom geography (aggregate smaller geography, e.g. tract block group), can create grouping variable, summarize using variable psrc_ctpp_sum() function, follows. psrc_ctpp_sum() results include estimates corresponding margins error. incl_na=FALSE option can used remove irrelevant categories without create separate filtered data object first (NA values relevant categories still preserved). can utilize convenience function ctpp_shares() append share share MOE CTPP dataset long contains category totals (typically case).","code":"x %<>% mutate(   custom_geo=case_when(      str_sub(work_geoid,4L,11L) %in% paste0(\"3302380\",3:4)         ~ \"Downtown Bellevue\",      str_sub(work_geoid,4L,11L) %in% paste0(\"61040\",c(4,7:8),\"00\") ~ \"Downtown Everett\",      TRUE                                                          ~ NA_character_),   category=factor(     case_when(       grepl(\" carpool$\",                category) ~\"Carpool\",       grepl(\"Drove alone|Motorcycle\",   category) ~\"Drove Alone\",       grepl(\"Bus|Subway|Ferry|[rR]ail\", category) ~\"Transit\",       grepl(\"Bicycle|Walked\",           category) ~\"Bike/Ped\",       grepl(\"^Total, means\",            category) ~\"Total\",       grepl(\"Other|Taxi\",               category) ~\"Other\",       !is.na(category) ~category),     levels=c(\"Bike/Ped\",\"Transit\",\"Carpool\",\"Drove Alone\",\"Other\",\"Total\"))) rs <- psrc_ctpp_sum(x, group_vars=\"custom_geo\", incl_na=FALSE) %>% ctpp_shares() head(rs[,2:7]) ## # A tibble: 6 × 6 ##   custom_geo       category    estimate estimate_moe   share share_moe ##   <chr>            <fct>          <dbl>        <dbl>   <dbl>     <dbl> ## 1 Downtown Everett Bike/Ped         760        287.  0.0479    0.0179  ## 2 Downtown Everett Transit          310        146.  0.0196    0.00915 ## 3 Downtown Everett Carpool         1295        295.  0.0817    0.0179  ## 4 Downtown Everett Drove Alone    12630        865.  0.797     0.0240  ## 5 Downtown Everett Other             59         48.2 0.00372   0.00303 ## 6 Downtown Everett Total          15855        976.  1         0.0870"},{"path":"https://psrc.github.io/psrcctpp/articles/tips_and_tricks.html","id":"querying-by-variable","dir":"Articles","previous_headings":"","what":"Querying by variable","title":"psrcctpp tips & tricks","text":"addition requesting entire tables, package/API can return individual variables. prefer , ’ll need identify variable codes, naturally ’s ctpp_varsearch function assist; parameter table code question. codes identified, character vector can used second argument (table_code) get_psrc_ctpp().","code":"shhh <- suppressPackageStartupMessages shhh(library(psrcctpp)) shhh(library(magrittr)) shhh(library(dplyr)) shhh(library(stringr))  ctpp_varsearch(\"A101101\", year=2016) %>% head() ##          name           label ##        <char>          <char> ## 1: A101101_e2  Under 16 years ## 2: A101101_e1 Total, all ages ## 3: A101101_e3 16 and 17 years ## 4: A101101_e4  18 to 20 years ## 5: A101101_e5  21 to 24 years ## 6: A101101_e6  25 to 34 years x <- get_psrc_ctpp(scale=\"tract\",                     table_code=c(\"A101101_e1\",\"A101101_e2\"), # Variable list instead of table                    dyear=2016)  mutate(x, res_label=str_sub(res_label, 7L, 14L),           # abbreviate to fit in frame           category =str_sub(category, 1L, 15L)) %>%   select(c(3,6:8)) %>% head() ##    res_label work_label        category estimate ##       <char>     <char>          <char>    <num> ## 1:   Tract 1       <NA> Total, all ages     7260 ## 2:   Tract 1       <NA>  Under 16 years     1120 ## 3:   Tract 2       <NA> Total, all ages     7900 ## 4:   Tract 2       <NA>  Under 16 years     1150 ## 5:   Tract 3       <NA> Total, all ages     2830 ## 6:   Tract 3       <NA>  Under 16 years      555"},{"path":"https://psrc.github.io/psrcctpp/articles/tips_and_tricks.html","id":"bypassing-the-api","dir":"Articles","previous_headings":"","what":"Bypassing the API","title":"psrcctpp tips & tricks","text":"unlikely event API downtime, older method exists package read CTPP ftp files pre-downloaded network location (takes long download entire ftp zipfile call). use fallback option, specify get_psrc_ctpp( ...,  filepath=\"default\") PSRC VPN. also possible go completely offline saving full copy local directory, specifying directory place \"default\". API-free fallback table variable lookup functions, however.","code":"y <- get_psrc_ctpp(\"tract\", \"A101101\", 2016, filepath=\"default\")  mutate(y, res_label=str_sub(res_label, 7L, 14L),    # abbreviate to fit in frame           category =str_sub(category, 1L, 15L)) %>%   select(c(3,6:8)) %>% head() ##    res_label estimate estimate_moe category ##       <char>    <num>        <num>   <char> ## 1:   Tract 1     7260          481    Total ## 2:   Tract 2     7900          437    Total ## 3:   Tract 3     2830          223    Total ## 4:   Tract 4     6260          500    Total ## 5:   Tract 4     5165          481    Total ## 6:   Tract 5     3155          182    Total"},{"path":"https://psrc.github.io/psrcctpp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Craig Helmann. Author. Suzanne Childress. Maintainer. Christy Lam. Author. Chris Peak. Author. Michael Jensen. Author.","code":""},{"path":"https://psrc.github.io/psrcctpp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Helmann C, Lam C, Peak C, Jensen M (2025). psrcctpp: Tools utilize Census Transportation Planning Package (CTPP) data via AASHTO API. R package version 0.1.0, https://psrc.github.io/psrcctpp/.","code":"@Manual{,   title = {psrcctpp: Tools to utilize Census Transportation Planning Package (CTPP) data via the AASHTO API},   author = {Craig Helmann and Christy Lam and Chris Peak and Michael Jensen},   year = {2025},   note = {R package version 0.1.0},   url = {https://psrc.github.io/psrcctpp/}, }"},{"path":"https://psrc.github.io/psrcctpp/index.html","id":"psrcctpp","dir":"","previous_headings":"","what":"Tools to utilize Census Transportation Planning Package (CTPP) data via the AASHTO API","title":"Tools to utilize Census Transportation Planning Package (CTPP) data via the AASHTO API","text":"Tools utilize Census Transportation Planning Package (CTPP) data geographies Central Puget Sound Region. Install following command: devtools::install_github(\"psrc/psrcctpp\") problems installing package, make sure latest dependency packages. may prompted install dependency packages ; can install selecting option 1, “Install ”. package requires valid CTPP API key; obtain one, visit https://ctppdata.transportation.dev/ -> Login -> Create account. successfully logged options associated account (top right screen, hover username) include “Manage API Keys”. Create key , make .renviron entry named CTPP_API_KEY value, single quotes (command usethis::edit_r_environ() conveniently locates opens file ).","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/api_gofer.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch API results Helper function sending the API call & parsing its response — api_gofer","title":"Fetch API results Helper function sending the API call & parsing its response — api_gofer","text":"Fetch API results Helper function sending API call & parsing response","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/api_gofer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch API results Helper function sending the API call & parsing its response — api_gofer","text":"","code":"api_gofer(url)"},{"path":"https://psrc.github.io/psrcctpp/reference/api_gofer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch API results Helper function sending the API call & parsing its response — api_gofer","text":"url api call","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/api_gofer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch API results Helper function sending the API call & parsing its response — api_gofer","text":"data table","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_shares.html","id":null,"dir":"Reference","previous_headings":"","what":"Add shares to CTPP table — ctpp_shares","title":"Add shares to CTPP table — ctpp_shares","text":"Add shares CTPP table","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_shares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add shares to CTPP table — ctpp_shares","text":"","code":"ctpp_shares(df)"},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_shares.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add shares to CTPP table — ctpp_shares","text":"df dataframe, either result get_psrc_ctpp psrc_ctpp_stat","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_shares.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add shares to CTPP table — ctpp_shares","text":"dataframe share & share_moe","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"CTPP summary statistics — ctpp_stat","title":"CTPP summary statistics — ctpp_stat","text":"CTPP summary statistics Generate CTPP sums","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CTPP summary statistics — ctpp_stat","text":"","code":"psrc_ctpp_sum(df, group_vars = NULL, incl_na = TRUE)"},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CTPP summary statistics — ctpp_stat","text":"df result get_psrc_ctpp function group_vars grouping variables, original added incl_na whether include NA lines","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CTPP summary statistics — ctpp_stat","text":"table variable names labels, summary statistic margin error","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_tblsearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Search CTPP table codes — ctpp_tblsearch","title":"Search CTPP table codes — ctpp_tblsearch","text":"Search CTPP table codes","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_tblsearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search CTPP table codes — ctpp_tblsearch","text":"","code":"ctpp_tblsearch(prefix, regex, year)"},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_tblsearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search CTPP table codes — ctpp_tblsearch","text":"prefix 2-character pattern: see vignette(\"psrcctpp_basics\", package = \"psrcctpp\") regex string pattern match table description year last 5-year CTPP span, e.g. 2016 ctpp1216 survey","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_tblsearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search CTPP table codes — ctpp_tblsearch","text":"data table","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_varsearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Search CTPP variable codes — ctpp_varsearch","title":"Search CTPP variable codes — ctpp_varsearch","text":"Search CTPP variable codes","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_varsearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search CTPP variable codes — ctpp_varsearch","text":"","code":"ctpp_varsearch(table_code, year)"},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_varsearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search CTPP variable codes — ctpp_varsearch","text":"table_code requested data table string, e.g. \"A302103\" year last 5-year CTPP span, e.g. 2016 ctpp1216 survey","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/ctpp_varsearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search CTPP variable codes — ctpp_varsearch","text":"data table","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/fetch_ctpp_from_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch CTPP data from AASHTO api Helper to get_psrc_ctpp — fetch_ctpp_from_api","title":"Fetch CTPP data from AASHTO api Helper to get_psrc_ctpp — fetch_ctpp_from_api","text":"Fetch CTPP data AASHTO api Helper get_psrc_ctpp","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/fetch_ctpp_from_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch CTPP data from AASHTO api Helper to get_psrc_ctpp — fetch_ctpp_from_api","text":"","code":"fetch_ctpp_from_api(scale, table_code, dyear, geoids)"},{"path":"https://psrc.github.io/psrcctpp/reference/fetch_ctpp_from_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch CTPP data from AASHTO api Helper to get_psrc_ctpp — fetch_ctpp_from_api","text":"scale \"county\", \"place\", \"tract\" residence/workplace tables; \"county-county\", \"place-place\", \"place-county\", \"county-place\", \"tract-tract\" O-D tables table_code requested data table string, e.g. \"A302103\" dyear last 5-year CTPP span, e.g. 2016 ctpp1216 survey geoids optional string vector GEOID codes limit table","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/fetch_ctpp_from_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch CTPP data from AASHTO api Helper to get_psrc_ctpp — fetch_ctpp_from_api","text":"data table","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/fetch_ctpp_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch ftp-format CTPP data from network location Helper to get_psrc_ctpp — fetch_ctpp_from_file","title":"Fetch ftp-format CTPP data from network location Helper to get_psrc_ctpp — fetch_ctpp_from_file","text":"Fetch ftp-format CTPP data network location Helper get_psrc_ctpp","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/fetch_ctpp_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch ftp-format CTPP data from network location Helper to get_psrc_ctpp — fetch_ctpp_from_file","text":"","code":"fetch_ctpp_from_file(scale, table_code, dyear = 2016, filepath = \"default\")"},{"path":"https://psrc.github.io/psrcctpp/reference/fetch_ctpp_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch ftp-format CTPP data from network location Helper to get_psrc_ctpp — fetch_ctpp_from_file","text":"scale \"county\", \"place\", \"tract\" residence/workplace tables; \"county-county\", \"place-place\", \"place-county\", \"county-place\", \"tract-tract\" O-D tables table_code requested data table string, e.g. \"A302103\" dyear last 5-year CTPP span, e.g. 2016 ctpp1216 survey filepath optional network location downloaded ftp CTPP files","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/fetch_ctpp_from_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch ftp-format CTPP data from network location Helper to get_psrc_ctpp — fetch_ctpp_from_file","text":"data table","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/get_psrc_ctpp.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve CTPP data — get_psrc_ctpp","title":"Retrieve CTPP data — get_psrc_ctpp","text":"Retrieve CTPP data","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/get_psrc_ctpp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve CTPP data — get_psrc_ctpp","text":"","code":"get_psrc_ctpp(scale, table_code, dyear = 2016, geoids = NULL, filepath = NULL)"},{"path":"https://psrc.github.io/psrcctpp/reference/get_psrc_ctpp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve CTPP data — get_psrc_ctpp","text":"scale \"county\", \"place\", \"tract\" residence/workplace tables; \"county-county\", \"place-place\", \"place-county\", \"county-place\", \"tract-tract\" O-D tables table_code requested data table string, e.g. \"A302103\" dyear last 5-year CTPP span, e.g. 2016 ctpp1216 survey geoids optional string vector GEOID codes limit table filepath optional network location downloaded ftp CTPP files","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/get_psrc_ctpp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve CTPP data — get_psrc_ctpp","text":"data table","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/psrc_ctpp_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic call for CTPP summary statistics — psrc_ctpp_stat","title":"Generic call for CTPP summary statistics — psrc_ctpp_stat","text":"Given specific form related ctpp_stat functions.","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/psrc_ctpp_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic call for CTPP summary statistics — psrc_ctpp_stat","text":"","code":"psrc_ctpp_stat(df, group_vars, stat_type = \"sum\", incl_na = FALSE)"},{"path":"https://psrc.github.io/psrcctpp/reference/psrc_ctpp_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic call for CTPP summary statistics — psrc_ctpp_stat","text":"df result get_psrc_ctpp function group_vars grouping variables, original added stat_type now, \"sum\" option incl_na whether include NA lines","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/scale_code_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Correspondence table for CTPP codes, table type, and scale — scale_code_lookup","title":"Correspondence table for CTPP codes, table type, and scale — scale_code_lookup","text":"Correspondence table CTPP codes, table type, scale","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/scale_code_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correspondence table for CTPP codes, table type, and scale — scale_code_lookup","text":"","code":"scale_code_lookup(scale, table_code)"},{"path":"https://psrc.github.io/psrcctpp/reference/scale_code_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correspondence table for CTPP codes, table type, and scale — scale_code_lookup","text":"scale \"county\", \"place\", \"tract\" residence/workplace tables; \"county-county\", \"place-place\", \"place-county\", \"county-place\", \"tract-tract\" flow tables table_code requested data table string, e.g. \"A302103\"","code":""},{"path":"https://psrc.github.io/psrcctpp/reference/scale_code_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correspondence table for CTPP codes, table type, and scale — scale_code_lookup","text":"correspondence table","code":""}]
